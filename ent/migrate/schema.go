// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ArticlesColumns holds the columns for the "articles" table.
	ArticlesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString, Size: 255},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "status", Type: field.TypeInt64, Default: 1},
		{Name: "img", Type: field.TypeString, Default: "https://zip.xxcheng.cn/lunwen/news.jpeg"},
		{Name: "category_article", Type: field.TypeInt64, Nullable: true},
		{Name: "user_article", Type: field.TypeInt64, Nullable: true},
	}
	// ArticlesTable holds the schema information for the "articles" table.
	ArticlesTable = &schema.Table{
		Name:       "articles",
		Columns:    ArticlesColumns,
		PrimaryKey: []*schema.Column{ArticlesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "articles_categories_article",
				Columns:    []*schema.Column{ArticlesColumns[8]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "articles_users_article",
				Columns:    []*schema.Column{ArticlesColumns[9]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "parent_id", Type: field.TypeInt64, Default: 0},
		{Name: "name", Type: field.TypeString, Size: 255},
		{Name: "status", Type: field.TypeInt64, Default: 1},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
	}
	// SwipersColumns holds the columns for the "swipers" table.
	SwipersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString, Default: "默认标题"},
		{Name: "img", Type: field.TypeString, Default: "https://cdn-static.xxcheng.cn/static/blog/images/2023/04/24/cd46a916b71dcf8a4f38508c6b4f87f3.jpg"},
		{Name: "url", Type: field.TypeString, Default: "https://www.baidu.com/"},
		{Name: "order", Type: field.TypeInt64, Default: 1},
		{Name: "status", Type: field.TypeInt64, Default: 1},
	}
	// SwipersTable holds the schema information for the "swipers" table.
	SwipersTable = &schema.Table{
		Name:       "swipers",
		Columns:    SwipersColumns,
		PrimaryKey: []*schema.Column{SwipersColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "username", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "name", Type: field.TypeString, Size: 255},
		{Name: "password", Type: field.TypeString, Size: 255},
		{Name: "status", Type: field.TypeInt64, Default: 1},
		{Name: "role", Type: field.TypeInt64, Default: 1},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// XconfigsColumns holds the columns for the "xconfigs" table.
	XconfigsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "key", Type: field.TypeString, Unique: true},
		{Name: "value", Type: field.TypeString, Default: "1"},
		{Name: "desc", Type: field.TypeString, Default: "default desc"},
	}
	// XconfigsTable holds the schema information for the "xconfigs" table.
	XconfigsTable = &schema.Table{
		Name:       "xconfigs",
		Columns:    XconfigsColumns,
		PrimaryKey: []*schema.Column{XconfigsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ArticlesTable,
		CategoriesTable,
		SwipersTable,
		UsersTable,
		XconfigsTable,
	}
)

func init() {
	ArticlesTable.ForeignKeys[0].RefTable = CategoriesTable
	ArticlesTable.ForeignKeys[1].RefTable = UsersTable
}
