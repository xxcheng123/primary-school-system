// Code generated by goctl. DO NOT EDIT.
// Source: school.proto

package swiper

import (
	"context"

	"github.com/xxcheng123/primary-school-system/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddSwiperReq       = pb.AddSwiperReq
	ArticleInfo        = pb.ArticleInfo
	CategoryInfo       = pb.CategoryInfo
	CreateArticleReq   = pb.CreateArticleReq
	CreateArticleResp  = pb.CreateArticleResp
	CreateCategoryReq  = pb.CreateCategoryReq
	CreateUserReq      = pb.CreateUserReq
	CreateUserResp     = pb.CreateUserResp
	GetCategoryReq     = pb.GetCategoryReq
	GetInfoArticleReq  = pb.GetInfoArticleReq
	GetInfoUserReq     = pb.GetInfoUserReq
	GetListArticleReq  = pb.GetListArticleReq
	GetListArticleResp = pb.GetListArticleResp
	GetListCategoryReq = pb.GetListCategoryReq
	InfoSwiper         = pb.InfoSwiper
	InfoUserResp       = pb.InfoUserResp
	ListCategoryResp   = pb.ListCategoryResp
	ListSwiperReq      = pb.ListSwiperReq
	ListSwiperResp     = pb.ListSwiperResp
	LoginUserReq       = pb.LoginUserReq
	OperateSwiperReq   = pb.OperateSwiperReq
	OperateSwiperResp  = pb.OperateSwiperResp
	Request            = pb.Request
	Response           = pb.Response
	UpdateSwiperReq    = pb.UpdateSwiperReq
	UserInfo           = pb.UserInfo

	Swiper interface {
		AddSwiper(ctx context.Context, in *AddSwiperReq, opts ...grpc.CallOption) (*InfoSwiper, error)
		// OperateSwiper 简单编辑轮播图
		OperateSwiper(ctx context.Context, in *OperateSwiperReq, opts ...grpc.CallOption) (*OperateSwiperResp, error)
		// ListSwiper 轮播图列表
		ListSwiper(ctx context.Context, in *ListSwiperReq, opts ...grpc.CallOption) (*ListSwiperResp, error)
		// UpdateSwiper 更新轮播图
		UpdateSwiper(ctx context.Context, in *UpdateSwiperReq, opts ...grpc.CallOption) (*InfoSwiper, error)
	}

	defaultSwiper struct {
		cli zrpc.Client
	}
)

func NewSwiper(cli zrpc.Client) Swiper {
	return &defaultSwiper{
		cli: cli,
	}
}

func (m *defaultSwiper) AddSwiper(ctx context.Context, in *AddSwiperReq, opts ...grpc.CallOption) (*InfoSwiper, error) {
	client := pb.NewSwiperClient(m.cli.Conn())
	return client.AddSwiper(ctx, in, opts...)
}

// OperateSwiper 简单编辑轮播图
func (m *defaultSwiper) OperateSwiper(ctx context.Context, in *OperateSwiperReq, opts ...grpc.CallOption) (*OperateSwiperResp, error) {
	client := pb.NewSwiperClient(m.cli.Conn())
	return client.OperateSwiper(ctx, in, opts...)
}

// ListSwiper 轮播图列表
func (m *defaultSwiper) ListSwiper(ctx context.Context, in *ListSwiperReq, opts ...grpc.CallOption) (*ListSwiperResp, error) {
	client := pb.NewSwiperClient(m.cli.Conn())
	return client.ListSwiper(ctx, in, opts...)
}

// UpdateSwiper 更新轮播图
func (m *defaultSwiper) UpdateSwiper(ctx context.Context, in *UpdateSwiperReq, opts ...grpc.CallOption) (*InfoSwiper, error) {
	client := pb.NewSwiperClient(m.cli.Conn())
	return client.UpdateSwiper(ctx, in, opts...)
}
